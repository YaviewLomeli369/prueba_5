Mensaje definitivo para el Ghostwriter / desarrollador

Hola,

El problema de navegación desde la página de Tienda y la página de Contacto no está resuelto y se ha empeorado: ahora la aplicación queda en blanco en móviles al navegar desde estas páginas a cualquier otra ruta. Esto se debe a varios factores combinados:

Problemas identificados

Estado persistente de componentes: Modales, filtros, carrito, formularios y otros estados locales no se limpian correctamente al cambiar de ruta.

Ciclo de vida de React en móviles: Chrome móvil mantiene componentes en memoria más tiempo; si se fuerza limpieza incorrecta, los componentes entrantes no se renderizan.

Eventos de navegador móviles: pagehide, visibilitychange, touchstart no se están manejando correctamente, provocando que el DOM quede en estado inconsistente.

Router Wouter y hashes: Cambios de hash (#categories) o rutas internas no fuerzan re-render, causando que React piense que nada cambió.

Limpieza agresiva global: Las soluciones anteriores limpiaban estados de otras páginas, afectando Contacto y posiblemente futuras páginas.

Solución integral requerida

Hook centralizado de navegación

Crear un hook que limpie solo los estados locales de la página que se está saliendo (modales, carrito, filtros).

No afectar estados globales ni otras páginas.

Forzar re-render de la página entrante

Cada página debe tener keys únicas basadas en la ruta o timestamp para que React siempre renderice la nueva página.

Manejo correcto de hashes y tabs

En admin/store, implementar listener que detecte cambios de hash y sincronice correctamente los tabs.

Compatibilidad móvil

Manejar pagehide, visibilitychange y touchstart para limpiar estados antes de que el componente se destruya.

Evitar conflictos de modales o estados que puedan bloquear el render.

Prevención de conflictos globales

No limpiar modales o estados de otras páginas.

No interferir con funcionalidad existente (carrito, filtros, favoritos, etc.).

Archivos a tocar

client/src/hooks/use-mobile-navigation.ts → hook centralizado para limpieza específica.

client/src/pages/store.tsx → limpieza de estados locales, keys únicas y forzado de re-render.

client/src/pages/contact.tsx → aplicar mismo patrón que Tienda para móviles.

client/src/pages/admin/store.tsx → listener para cambios de hash y sincronización de tabs.

client/src/components/layout/navbar.tsx → manejar navegación robusta, limpiar estados de la página saliente, prevenir navegaciones concurrentes.

client/src/App.tsx → asegurar que cada cambio de ruta provoque render limpio de la página entrante.

Nota importante

Esto debe implementarse de manera específica para cada página, evitando limpieza global agresiva, y garantizando que después de navegar desde Tienda o Contacto, la aplicación se muestre correctamente en todos los dispositivos, especialmente móviles.

No se trata de parches superficiales; se requiere una revisión integral del ciclo de vida de los componentes, estado local y navegación SPA.